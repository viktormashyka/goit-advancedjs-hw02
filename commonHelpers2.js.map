{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet countdown = 0;\nlet timerId = null;\n\nconst elements = {\n  startBtn: document.querySelector('button[data-start]'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    countdown = selectedDates[0] - Date.now();\n\n    if (countdown < 0) {\n      iziToast.info({\n        theme: 'red',\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n      return;\n    }\n\n    elements.startBtn.removeAttribute('disabled');\n  },\n};\n\nconst datePicker = flatpickr('#datetime-picker', options);\n\nconsole.log('datePicker: ', datePicker._input);\n\nelements.startBtn.setAttribute('disabled', true);\n\nelements.startBtn.addEventListener('click', () => {\n  if (timerId) {\n    return;\n  }\n  timerId = setInterval(handleClickStart, 1000);\n});\n\nfunction handleClickStart() {\n  elements.startBtn.setAttribute('disabled', true);\n  datePicker._input.setAttribute('disabled', true);\n\n  if (countdown < 1000) {\n    clearInterval(timerId);\n    elements.startBtn.removeAttribute('disabled');\n    datePicker._input.removeAttribute('disabled');\n  }\n  const { days, hours, minutes, seconds } = convertMs(countdown);\n  countdown -= 1000;\n\n  const addLeadingZero = value => value.toString().padStart(2, '0');\n\n  elements.days.textContent = addLeadingZero(days);\n  elements.hours.textContent = addLeadingZero(hours);\n  elements.minutes.textContent = addLeadingZero(minutes);\n  elements.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["countdown","timerId","elements","options","selectedDates","iziToast","datePicker","flatpickr","handleClickStart","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"+IAMA,IAAIA,EAAY,EACZC,EAAU,KAEd,MAAMC,EAAW,CACf,SAAU,SAAS,cAAc,oBAAoB,EACrD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAJ,EAAYI,EAAc,GAAK,KAAK,IAAG,EAEnCJ,EAAY,EAAG,CACjBK,EAAS,KAAK,CACZ,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EACD,MACD,CAEDH,EAAS,SAAS,gBAAgB,UAAU,CAC7C,CACH,EAEMI,EAAaC,EAAU,mBAAoBJ,CAAO,EAExD,QAAQ,IAAI,eAAgBG,EAAW,MAAM,EAE7CJ,EAAS,SAAS,aAAa,WAAY,EAAI,EAE/CA,EAAS,SAAS,iBAAiB,QAAS,IAAM,CAC5CD,IAGJA,EAAU,YAAYO,EAAkB,GAAI,EAC9C,CAAC,EAED,SAASA,GAAmB,CAC1BN,EAAS,SAAS,aAAa,WAAY,EAAI,EAC/CI,EAAW,OAAO,aAAa,WAAY,EAAI,EAE3CN,EAAY,MACd,cAAcC,CAAO,EACrBC,EAAS,SAAS,gBAAgB,UAAU,EAC5CI,EAAW,OAAO,gBAAgB,UAAU,GAE9C,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUb,CAAS,EAC7DA,GAAa,IAEb,MAAMc,EAAiBC,GAASA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhEb,EAAS,KAAK,YAAcY,EAAeL,CAAI,EAC/CP,EAAS,MAAM,YAAcY,EAAeJ,CAAK,EACjDR,EAAS,QAAQ,YAAcY,EAAeH,CAAO,EACrDT,EAAS,QAAQ,YAAcY,EAAeF,CAAO,CACvD,CAEA,SAASC,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}